package org.datasource.mongodb.views.departamentscities;

import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.datasource.mongodb.MongoDataSourceConnector;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

@Service
public class SalaryViewBuilder {

	// Data cache
	
	private List<SalaryUkraine> salariesViewList;
	
	public List<SalaryUkraine> getCitiesViewList() {
		return salariesViewList;
	}

	//
	private MongoDataSourceConnector dataSourceConnector;
	
	
	public SalaryViewBuilder(MongoDataSourceConnector dataSourceConnector) {
		this.dataSourceConnector = dataSourceConnector;
	}

	// Builder Workflow
	public SalaryViewBuilder build() throws Exception{
		return this.select().map();
	}
		
	private SalaryViewBuilder map() {
		this.departamentsViewList = this.departamentsListView.getDepartaments();
		this.salariesViewList = new ArrayList<>();
		
		for(DepartamentView departamentView: departamentsViewList)
			this.salariesViewList.addAll(departamentView.getCities());

		return this;
	}
	
	public SalaryViewBuilder select() throws Exception {
		MongoDatabase db = dataSourceConnector.getMongoDatabase();

		MongoCollection<DepartamentsListView> departamentsCollection =
				db.getCollection("DepartamentsCities", DepartamentsListView.class);
		this.departamentsListView = departamentsCollection.find().first();
		//
		departamentsListView.getDepartaments().forEach(System.out::println);
		//
		return this;
	}
}
